const g="data:text/markdown;base64,IyMjIFdhZ3l1IEJlZWYgVGVuZGVybG9pbiB3aXRoIFBvdGF0byBHcmF0aW4sIEZvaWUgR3JhcywgYW5kIFBlcmlnb3JkIFRydWZmbGUgSnVzDQoNCiMjIyMgSW5ncmVkaWVudHM6DQoNCioqRm9yIHRoZSBXYWd5dSBCZWVmIFRlbmRlcmxvaW46KioNCi0gNCBXYWd5dSBiZWVmIHRlbmRlcmxvaW4gc3RlYWtzICgyMDBnIGVhY2gpDQotIFNhbHQgYW5kIGZyZXNobHkgZ3JvdW5kIGJsYWNrIHBlcHBlciwgdG8gdGFzdGUNCi0gMiB0YWJsZXNwb29ucyBvbGl2ZSBvaWwNCi0gNCB0YWJsZXNwb29ucyB1bnNhbHRlZCBidXR0ZXINCi0gMiBjbG92ZXMgZ2FybGljLCBzbWFzaGVkDQotIDQgc3ByaWdzIGZyZXNoIHRoeW1lDQoNCioqRm9yIHRoZSBQb3RhdG8gR3JhdGluOioqDQotIDgwMGcgWXVrb24gR29sZCBwb3RhdG9lcywgdGhpbmx5IHNsaWNlZA0KLSAyIGN1cHMgaGVhdnkgY3JlYW0NCi0gMiBjbG92ZXMgZ2FybGljLCBtaW5jZWQNCi0gMSB0ZWFzcG9vbiBudXRtZWcNCi0gU2FsdCBhbmQgZnJlc2hseSBncm91bmQgYmxhY2sgcGVwcGVyLCB0byB0YXN0ZQ0KLSAxIGN1cCBHcnV5ZXJlIGNoZWVzZSwgZ3JhdGVkDQotIDEvMiBjdXAgUGFybWVzYW4gY2hlZXNlLCBncmF0ZWQNCi0gMiB0YWJsZXNwb29ucyBidXR0ZXIsIGZvciBncmVhc2luZw0KDQoqKkZvciB0aGUgRm9pZSBHcmFzOioqDQotIDQgc2xpY2VzIGZvaWUgZ3JhcyAoYXBwcm94aW1hdGVseSA1MGcgZWFjaCkNCi0gU2VhIHNhbHQsIHRvIHRhc3RlDQotIEZyZXNobHkgZ3JvdW5kIGJsYWNrIHBlcHBlciwgdG8gdGFzdGUNCg0KKipGb3IgdGhlIFBlcmlnb3JkIFRydWZmbGUgSnVzOioqDQotIDEgdGFibGVzcG9vbiBvbGl2ZSBvaWwNCi0gMSBzaGFsbG90LCBmaW5lbHkgZGljZWQNCi0gMiBjbG92ZXMgZ2FybGljLCBtaW5jZWQNCi0gMSBjdXAgcmVkIHdpbmUNCi0gMSBjdXAgYmVlZiBzdG9jaw0KLSAyIHRlYXNwb29ucyB0cnVmZmxlIG9pbA0KLSAxIHRhYmxlc3Bvb24gdW5zYWx0ZWQgYnV0dGVyDQotIDMwZyBQZXJpZ29yZCB0cnVmZmxlLCBzaGF2ZWQNCg0KIyMjIyBJbnN0cnVjdGlvbnM6DQoNCioqMS4gUHJlcGFyZSB0aGUgUG90YXRvIEdyYXRpbjoqKg0KICAgLSBQcmVoZWF0IHRoZSBvdmVuIHRvIDE4MMKwQyAoMzUwwrBGKS4gQnV0dGVyIGEgYmFraW5nIGRpc2ggZ2VuZXJvdXNseS4NCiAgIC0gSW4gYSBzYXVjZXBhbiwgY29tYmluZSBoZWF2eSBjcmVhbSwgbWluY2VkIGdhcmxpYywgbnV0bWVnLCBzYWx0LCBhbmQgcGVwcGVyLiBCcmluZyB0byBhIGdlbnRsZSBzaW1tZXIuDQogICAtIExheWVyIHRoZSBzbGljZWQgcG90YXRvZXMgaW4gdGhlIGJ1dHRlcmVkIGJha2luZyBkaXNoLiBQb3VyIHRoZSBjcmVhbSBtaXh0dXJlIG92ZXIgdGhlIHBvdGF0b2VzIGFuZCB0b3Agd2l0aCBHcnV5ZXJlIGFuZCBQYXJtZXNhbiBjaGVlc2VzLg0KICAgLSBDb3ZlciB3aXRoIGZvaWwgYW5kIGJha2UgZm9yIDQ1IG1pbnV0ZXMuIFJlbW92ZSBmb2lsIGFuZCBiYWtlIGZvciBhbiBhZGRpdGlvbmFsIDE1IG1pbnV0ZXMgb3IgdW50aWwgZ29sZGVuIGJyb3duIGFuZCBidWJibHkuDQoNCioqMi4gQ29vayB0aGUgV2FneXUgQmVlZiBUZW5kZXJsb2luOioqDQogICAtIFNlYXNvbiB0aGUgV2FneXUgc3RlYWtzIHdpdGggc2FsdCBhbmQgZnJlc2hseSBncm91bmQgYmxhY2sgcGVwcGVyLg0KICAgLSBJbiBhIGxhcmdlIHNraWxsZXQsIGhlYXQgb2xpdmUgb2lsIGFuZCBhZGQgYnV0dGVyLiBPbmNlIHRoZSBidXR0ZXIgaXMgbWVsdGVkLCBhZGQgZ2FybGljIGNsb3ZlcyBhbmQgdGh5bWUuDQogICAtIFNlYXIgdGhlIHRlbmRlcmxvaW4gc3RlYWtzIGluIHRoZSBza2lsbGV0IG92ZXIgbWVkaXVtLWhpZ2ggaGVhdCBmb3IgMy00IG1pbnV0ZXMgb24gZWFjaCBzaWRlIGZvciBtZWRpdW0tcmFyZSBkb25lbmVzcy4gUmVtb3ZlIGZyb20gdGhlIGhlYXQgYW5kIGxldCByZXN0Lg0KDQoqKjMuIFNlYXIgdGhlIEZvaWUgR3JhczoqKg0KICAgLSBTZWFzb24gZm9pZSBncmFzIHNsaWNlcyB3aXRoIHNlYSBzYWx0IGFuZCBwZXBwZXIuDQogICAtIEluIGEgbm9uLXN0aWNrIHBhbiwgc2VhciBmb2llIGdyYXMgb24gaGlnaCBoZWF0IGZvciBhYm91dCAzMCBzZWNvbmRzIG9uIGVhY2ggc2lkZSB1bnRpbCBicm93bmVkLiBSZW1vdmUgYW5kIGxldCByZXN0IGJyaWVmbHkuDQoNCioqNC4gTWFrZSB0aGUgUGVyaWdvcmQgVHJ1ZmZsZSBKdXM6KioNCiAgIC0gSW4gYSBzYXVjZXBhbiwgaGVhdCBvbGl2ZSBvaWwgYW5kIHNhdXTDqSBzaGFsbG90cyBhbmQgZ2FybGljIHVudGlsIHRyYW5zbHVjZW50LiBBZGQgcmVkIHdpbmUsIGJyaW5nIHRvIGEgYm9pbCwgYW5kIHJlZHVjZSBieSBoYWxmLg0KICAgLSBBZGQgYmVlZiBzdG9jayBhbmQgcmVkdWNlIGJ5IGhhbGYgYWdhaW4uIFN0aXIgaW4gdHJ1ZmZsZSBvaWwgYW5kIGZpbmlzaCB3aXRoIGJ1dHRlciBmb3IgYSBnbG9zc3kgc2F1Y2UuDQogICAtIEFkZCBzaGF2ZWQgUGVyaWdvcmQgdHJ1ZmZsZSBhbmQgZ2VudGx5IGhlYXQgdGhyb3VnaC4NCg0KIyMjIyBBc3NlbWJseToNCiAgIC0gUGxhdGUgZWFjaCBXYWd5dSBzdGVhaywgY292ZXJpbmcgd2l0aCBhIHNsaWNlIG9mIHNlYXJlZCBmb2llIGdyYXMuDQogICAtIFNlcnZlIHdpdGggYSBnZW5lcm91cyBwb3J0aW9uIG9mIHBvdGF0byBncmF0aW4uDQogICAtIERyaXp6bGUgUGVyaWdvcmQgdHJ1ZmZsZSBqdXMgb3ZlciB0aGUgc3RlYWtzIGFuZCBhcm91bmQgdGhlIHBsYXRlLg0KICAgLSBHYXJuaXNoIHdpdGggYWRkaXRpb25hbCBzaGF2ZWQgdHJ1ZmZsZSBpZiBkZXNpcmVkLg0KDQoqKldpbmUgUGFpcmluZzoqKg0KLSBFbmpveSB3aXRoIGEgZ2xhc3Mgb2YgQ2FiZXJuZXQgU2F1dmlnbm9uLCBwYXJ0aWN1bGFybHkgdGhlIHJvYnVzdCBhbmQgZWxlZ2FudCBIYXJsYW4gRXN0YXRlIDIwMTQuIFRoZSB3aW5lJ3MgcmljaCBib2R5IGNvbXBsZW1lbnRzIHRoZSBsdXh1cmlvdXMgY2hhcmFjdGVyIG9mIHRoZSBXYWd5dSBhbmQgZm9pZSBncmFzLCBlbmhhbmNpbmcgdGhlIGRpc2gncyBkZXB0aCBhbmQgY29tcGxleGl0eS4=";export{g as default};
