const I="data:text/markdown;base64,IyBDcmVhbXkgUHVtcGtpbiBhbmQgQ29jb251dCBTb3VwIHdpdGggU3VtYWMtU3BpY2VkIENyb3V0b25zDQoNCkEgd2FybSwgY3JlYW15IHNvdXAgcGVyZmVjdCBmb3IgYXV0dW1uIG9yIHdpbnRlciwgYmFsYW5jZWQgd2l0aCB0aGUgZXhvdGljIHppbmcgb2Ygc3VtYWMuIFRoaXMgZGlzaCBwYWlycyBiZWF1dGlmdWxseSB3aXRoIHRoZSBhcm9tYXRpYyBWaW9nbmllciBZdmVzIEN1aWxsZXJvbiBMZXMgVmlnbmVzIGQnw6AgQ8O0dMOpIDIwMTkuDQoNCiMjIEluZ3JlZGllbnRzDQoNCiMjIyBGb3IgdGhlIFNvdXA6DQotIDEgbWVkaXVtIHB1bXBraW4gKGFib3V0IDEuNSBrZy8zLjMgbGJzKSwgcGVlbGVkLCBzZWVkZWQsIGFuZCBjdWJlZA0KLSAyIHRhYmxlc3Bvb25zIG9saXZlIG9pbA0KLSAxIGxhcmdlIG9uaW9uLCBjaG9wcGVkDQotIDMgY2xvdmVzIGdhcmxpYywgbWluY2VkDQotIDEgdGFibGVzcG9vbiBmcmVzaCBnaW5nZXIsIGdyYXRlZA0KLSAxIHRlYXNwb29uIGdyb3VuZCBjdW1pbg0KLSAxIHRlYXNwb29uIGdyb3VuZCBjb3JpYW5kZXINCi0gMS8yIHRlYXNwb29uIGdyb3VuZCBjaW5uYW1vbg0KLSAxIHBpbmNoIHJlZCBwZXBwZXIgZmxha2VzDQotIDEgbGl0ZXIgdmVnZXRhYmxlIGJyb3RoDQotIDEgY2FuICg0MDAgbWwpIGNvY29udXQgbWlsaw0KLSBTYWx0IGFuZCBmcmVzaGx5IGdyb3VuZCBibGFjayBwZXBwZXIgdG8gdGFzdGUNCi0gSnVpY2Ugb2YgMSBsaW1lDQoNCiMjIyBGb3IgdGhlIFN1bWFjLVNwaWNlZCBDcm91dG9uczoNCi0gNCBzbGljZXMgb2YgZGF5LW9sZCBicmVhZCwgY3V0IGludG8gY3ViZXMNCi0gMiB0YWJsZXNwb29ucyBvbGl2ZSBvaWwNCi0gMSB0ZWFzcG9vbiBzdW1hYw0KLSAxLzIgdGVhc3Bvb24gcGFwcmlrYQ0KLSBTYWx0IHRvIHRhc3RlDQoNCiMjIyBHYXJuaXNoOg0KLSBGcmVzaCBjb3JpYW5kZXIgbGVhdmVzDQotIFRvYXN0ZWQgcHVtcGtpbiBzZWVkcw0KDQojIyBJbnN0cnVjdGlvbnMNCg0KIyMjIFByZXBhcmUgdGhlIFNvdXANCjEuICoqUm9hc3QgdGhlIFB1bXBraW46KiogUHJlaGVhdCB5b3VyIG92ZW4gdG8gMjAwwrBDICgzOTDCsEYpLiBQbGFjZSB0aGUgcHVtcGtpbiBjdWJlcyBvbiBhIGJha2luZyBzaGVldCwgZHJpenpsZSB3aXRoIGEgbGl0dGxlIG9saXZlIG9pbCwgYW5kIHJvYXN0IGZvciAzMCBtaW51dGVzIHVudGlsIHNvZnQgYW5kIHNsaWdodGx5IGNhcmFtZWxpemVkLg0KDQoyLiAqKkNvb2sgdGhlIEFyb21hdGljczoqKiBJbiBhIGxhcmdlIHBvdCwgaGVhdCAyIHRhYmxlc3Bvb25zIG9mIG9saXZlIG9pbCBvdmVyIG1lZGl1bSBoZWF0LiBBZGQgdGhlIG9uaW9uIGFuZCBzYXV0w6kgdW50aWwgdHJhbnNsdWNlbnQsIGFib3V0IDUtNiBtaW51dGVzLiBBZGQgdGhlIGdhcmxpYywgZ2luZ2VyLCBjdW1pbiwgY29yaWFuZGVyLCBjaW5uYW1vbiwgYW5kIHJlZCBwZXBwZXIgZmxha2VzLiBDb29rIGZvciBhbm90aGVyIDIgbWludXRlcyB1bnRpbCBmcmFncmFudC4NCg0KMy4gKipTaW1tZXIgdGhlIFNvdXA6KiogQWRkIHRoZSByb2FzdGVkIHB1bXBraW4gdG8gdGhlIHBvdCwgcG91ciBpbiB0aGUgdmVnZXRhYmxlIGJyb3RoLCBhbmQgYnJpbmcgdG8gYSBzaW1tZXIuIExldCBpdCBjb29rIGZvciBhYm91dCAxNSBtaW51dGVzLCBhbGxvd2luZyB0aGUgZmxhdm9ycyB0byBtZWxkLg0KDQo0LiAqKkJsZW5kIHRoZSBTb3VwOioqIFJlbW92ZSB0aGUgcG90IGZyb20gaGVhdCBhbmQgdXNlIGFuIGltbWVyc2lvbiBibGVuZGVyIHRvIHB1cmVlIHRoZSBzb3VwIHVudGlsIHNtb290aC4gQWx0ZXJuYXRpdmVseSwgYmxlbmQgaW4gYmF0Y2hlcyBpbiBhIGNvdW50ZXJ0b3AgYmxlbmRlci4NCg0KNS4gKipBZGQgdGhlIENvY29udXQgTWlsazoqKiBTdGlyIGluIHRoZSBjb2NvbnV0IG1pbGsgYW5kIGxpbWUganVpY2UuIFNlYXNvbiB3aXRoIHNhbHQgYW5kIHBlcHBlciB0byB0YXN0ZS4gR2VudGx5IHJlaGVhdCB0aGUgc291cCBvdmVyIGxvdyBoZWF0LCBzdGlycmluZyBvY2Nhc2lvbmFsbHkuDQoNCiMjIyBQcmVwYXJlIHRoZSBDcm91dG9ucw0KMS4gKipTZWFzb24gdGhlIEJyZWFkOioqIEluIGEgbWl4aW5nIGJvd2wsIHRvc3MgdGhlIGJyZWFkIGN1YmVzIHdpdGggb2xpdmUgb2lsLCBzdW1hYywgcGFwcmlrYSwgYW5kIGEgcGluY2ggb2Ygc2FsdCB1bnRpbCBldmVubHkgY29hdGVkLg0KDQoyLiAqKlRvYXN0IHRoZSBDcm91dG9uczoqKiBTcHJlYWQgdGhlIGJyZWFkIGN1YmVzIG9udG8gYSBiYWtpbmcgc2hlZXQgYW5kIHRvYXN0IGluIHRoZSBwcmVoZWF0ZWQgb3ZlbiBmb3IgYWJvdXQgMTAgbWludXRlcyB1bnRpbCBnb2xkZW4gYW5kIGNyaXNwLg0KDQojIyMgU2VydmUNCjEuICoqR2FybmlzaCB0aGUgU291cDoqKiBMYWRsZSB0aGUgc291cCBpbnRvIGJvd2xzIGFuZCB0b3AgZWFjaCB3aXRoIGEgaGFuZGZ1bCBvZiBzdW1hYy1zcGljZWQgY3JvdXRvbnMuDQoNCjIuICoqQWRkIEZpbmFsIFRvdWNoZXM6KiogR2FybmlzaCB3aXRoIGZyZXNoIGNvcmlhbmRlciBsZWF2ZXMgYW5kIGEgc3ByaW5rbGluZyBvZiB0b2FzdGVkIHB1bXBraW4gc2VlZHMuDQoNCjMuICoqRW5qb3kqKiB3aXRoIGEgZ2xhc3Mgb2YgVmlvZ25pZXIgWXZlcyBDdWlsbGVyb24gTGVzIFZpZ25lcyBkJ8OgIEPDtHTDqSAyMDE5LCBzYXZvcmluZyBob3cgaXRzIHJpY2huZXNzIGNvbXBsZW1lbnRzIHRoZSBjcmVhbWluZXNzIG9mIHRoZSBzb3VwLg0KDQpUaGlzIGNvenkgZGlzaCBpcyBzdXJlIHRvIHdhcm0geW91IHVwIGFuZCBkZWxpZ2h0IHlvdXIgc2Vuc2VzIHdpdGggaXRzIGhhcm1vbmlvdXMgYmxlbmQgb2Ygc3BpY2VzIGFuZCB0ZXh0dXJlcy4=";export{I as default};
