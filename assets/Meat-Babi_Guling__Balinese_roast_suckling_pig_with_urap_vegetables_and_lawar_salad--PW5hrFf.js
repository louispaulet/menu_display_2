const I="data:text/markdown;base64,IyBCYWJpIEd1bGluZyAoQmFsaW5lc2UgUm9hc3QgU3Vja2xpbmcgUGlnKSB3aXRoIFVyYXAgVmVnZXRhYmxlcyBhbmQgTGF3YXIgU2FsYWQNCg0KIyMgSW5ncmVkaWVudHMNCg0KIyMjIEZvciB0aGUgQmFiaSBHdWxpbmcNCi0gMSB3aG9sZSBzdWNrbGluZyBwaWcgKDEwLTEyIGtnKQ0KLSAxMDAgZyBzaGFsbG90cywgcGVlbGVkDQotIDEwMCBnIGdhcmxpYywgcGVlbGVkDQotIDYgc3RhbGtzIGxlbW9uZ3Jhc3MsIHdoaXRlIHBhcnRzIG9ubHkNCi0gNzUgZyBmcmVzaCB0dXJtZXJpYyByb290LCBwZWVsZWQNCi0gMTUwIGcgZ2FsYW5nYWwsIHBlZWxlZA0KLSAxMCBjYW5kbGVudXRzDQotIDIgdGJzcCBjb3JpYW5kZXIgc2VlZHMNCi0gNCBsb25nIHJlZCBjaGlsaWVzLCBkZXNlZWRlZA0KLSAyIHRic3Agc2FsdA0KLSA1IHRic3AgdmVnZXRhYmxlIG9pbA0KLSA0IGtlZmlyIGxpbWUgbGVhdmVzDQoNCiMjIyBGb3IgdGhlIFVyYXAgVmVnZXRhYmxlcw0KLSAyMDAgZyBncmVlbiBiZWFucywgYmxhbmNoZWQgYW5kIHNsaWNlZA0KLSAyMDAgZyBiZWFuIHNwcm91dHMsIGJsYW5jaGVkDQotIDIwMCBnIGdyYXRlZCBjb2NvbnV0LCB0b2FzdGVkDQotIDIga2FmZmlyIGxpbWUgbGVhdmVzLCBmaW5lbHkgc2xpY2VkDQotIDIgcmVkIGNoaWxpZXMsIGZpbmVseSBzbGljZWQNCi0gMSB0YnNwIHNocmltcCBwYXN0ZSwgcm9hc3RlZA0KLSAxIHRzcCBwYWxtIHN1Z2FyDQotIDIgdGJzcCBsaW1lIGp1aWNlDQotIFNhbHQgdG8gdGFzdGUNCg0KIyMjIEZvciB0aGUgTGF3YXIgU2FsYWQNCi0gMjUwIGcgc2hyZWRkZWQgY29jb251dCwgbGlnaHRseSB0b2FzdGVkDQotIDI1MCBnIGdyZWVuIHBhcGF5YSwgZmluZWx5IHNocmVkZGVkDQotIDE1MCBnIG1pbmNlZCBwb3JrLCBjb29rZWQgYW5kIHNlYXNvbmVkDQotIDQgcmVkIGNoaWxpZXMsIGZpbmVseSBzbGljZWQNCi0gNCBrYWZmaXIgbGltZSBsZWF2ZXMsIGZpbmVseSBzaHJlZGRlZA0KLSAxIHN0YWxrIGxlbW9uZ3Jhc3MsIGZpbmVseSBjaG9wcGVkDQotIDIgdGJzcCBzaHJpbXAgcGFzdGUsIHJvYXN0ZWQNCi0gMSB0c3AgcGFsbSBzdWdhcg0KLSAzIHRic3AgbGltZSBqdWljZQ0KLSBTYWx0IHRvIHRhc3RlDQoNCiMjIEluc3RydWN0aW9ucw0KDQojIyMgUHJlcGFyaW5nIEJhYmkgR3VsaW5nDQoxLiAqKlByZXBhcmUgdGhlIFNwaWNlIFBhc3RlOioqIEluIGEgZm9vZCBwcm9jZXNzb3IsIGJsZW5kIHNoYWxsb3RzLCBnYXJsaWMsIGxlbW9uZ3Jhc3MsIHR1cm1lcmljLCBnYWxhbmdhbCwgY2FuZGxlbnV0cywgY29yaWFuZGVyIHNlZWRzLCBhbmQgY2hpbGllcyB3aXRoIHNhbHQgYW5kIG9pbCB1bnRpbCBzbW9vdGguDQogICANCjIuICoqU3R1ZmYgYW5kIFNlYXNvbiB0aGUgUGlnOioqIFJ1YiB0aGUgaW5zaWRlIG9mIHRoZSBwaWcgd2l0aCB0aGUgc3BpY2UgcGFzdGUgYW5kIGluc2VydCBrZWZpciBsaW1lIGxlYXZlcy4gU2V3IHRoZSBjYXZpdHkgc2h1dCBhbmQgcnViIHJlbWFpbmluZyBwYXN0ZSBhbGwgb3ZlciB0aGUgc2tpbiBvZiB0aGUgcGlnLg0KDQozLiAqKlJvYXN0aW5nOioqIFByZWhlYXQgb3ZlbiB0byAxNjDCsEMgKDMyMMKwRikuIFBsYWNlIHRoZSBwaWcgb24gYSBzcGl0IG9yIHJvYXN0aW5nIHJhY2ssIGNvb2sgZm9yIGFib3V0IDQgdG8gNSBob3VycywgYmFzdGluZyBvY2Nhc2lvbmFsbHkgd2l0aCBpdHMgb3duIGp1aWNlcywgdW50aWwgdGhlIHNraW4gaXMgZ29sZGVuIGFuZCBjcmlzcHkuDQoNCjQuICoqUmVzdGluZzoqKiBBbGxvdyB0aGUgcGlnIHRvIHJlc3QgZm9yIDMwIG1pbnV0ZXMgYmVmb3JlIGNhcnZpbmcuDQoNCiMjIyBNYWtpbmcgVXJhcCBWZWdldGFibGVzDQoxLiAqKk1peCBJbmdyZWRpZW50czoqKiBJbiBhIGJvd2wsIGNvbWJpbmUgYmxhbmNoZWQgZ3JlZW4gYmVhbnMgYW5kIGJlYW4gc3Byb3V0cyB3aXRoIHRvYXN0ZWQgY29jb251dCBhbmQga2FmZmlyIGxpbWUgbGVhdmVzLg0KDQoyLiAqKlNlYXNvbjoqKiBBZGQgc2xpY2VkIGNoaWxpZXMsIHNocmltcCBwYXN0ZSwgcGFsbSBzdWdhciwgbGltZSBqdWljZSwgYW5kIHNhbHQuIFRvc3Mgd2VsbCBhbmQgYWRqdXN0IHNlYXNvbmluZyBhcyBuZWNlc3NhcnkuDQoNCiMjIyBQcmVwYXJpbmcgTGF3YXIgU2FsYWQNCjEuICoqQ29tYmluZSBJbmdyZWRpZW50czoqKiBJbiBhIGxhcmdlIGJvd2wsIG1peCB0b2FzdGVkIGNvY29udXQgd2l0aCBzaHJlZGRlZCBncmVlbiBwYXBheWEgYW5kIGNvb2tlZCBtaW5jZWQgcG9yay4NCg0KMi4gKipBZGQgU2Vhc29uaW5nOioqIFN0aXIgaW4gc2xpY2VkIGNoaWxpZXMsIHNocmVkZGVkIGxpbWUgbGVhdmVzLCBjaG9wcGVkIGxlbW9uZ3Jhc3MsIHNocmltcCBwYXN0ZSwgcGFsbSBzdWdhciwgbGltZSBqdWljZSwgYW5kIHNhbHQuIFRvc3MgdW50aWwgZXZlcnl0aGluZyBpcyB3ZWxsIGNvbWJpbmVkLg0KDQozLiAqKkFkanVzdCBzZWFzb25pbmc6KiogQmFsYW5jZSB0aGUgZmxhdm9ycyB3aXRoIGFkZGl0aW9uYWwgbGltZSBqdWljZSBvciBzYWx0IGlmIG5lZWRlZC4NCg0KIyMgU2VydmluZw0KLSBDYXJ2ZSB0aGUgQmFiaSBHdWxpbmcgYW5kIGFycmFuZ2Ugc2xpY2VzIG9uIGEgcGxhdHRlci4NCi0gU2VydmUgYWxvbmdzaWRlIFVyYXAgVmVnZXRhYmxlcyBhbmQgTGF3YXIgU2FsYWQuDQotIFBhaXIgd2l0aCBhIGJvdHRsZSBvZiBQZW5mb2xkcyBCaW4gMjggS2FsaW1uYSBTaGlyYXogMjAxOCB0byBjb21wbGVtZW50IHRoZSByaWNoIGZsYXZvcnMgb2YgdGhlIGRpc2guDQoNCkVuam95IHRoaXMgZmxhdm9yZnVsIGFuZCB0cmFkaXRpb25hbCBCYWxpbmVzZSBmZWFzdCB0aGF0IGNvbWJpbmVzIHRoZSB0ZW5kZXJuZXNzIG9mIHRoZSByb2FzdGVkIHN1Y2tsaW5nIHBpZyB3aXRoIHZpYnJhbnQgYW5kIHNhdm9yeSBzaWRlIGRpc2hlcywgY3JlYXRpbmcgYSB0cnVseSBtZW1vcmFibGUgZXhwZXJpZW5jZS4=";export{I as default};
