const g="data:text/markdown;base64,IyMgRGFyayBNYXR0ZXIgQ2hvY29sYXRlIE1vdXNzZSB3aXRoIEZyZWV6ZS1EcmllZCBSYXNwYmVycnkgQ291bGlzIGFuZCBTdXBlcm5vdmEgU3VnYXINCg0KUHJlcGFyZSBhbiBhc3RvdW5kaW5nbHkgcmljaCBhbmQgY29zbWljIGRlc3NlcnQgdGhhdCBwcm9taXNlcyBhIGpvdXJuZXkgdGhyb3VnaCB0aGUgZ2FsYXhpZXMgb2YgdGFzdGUuIFRoaXMgZGVzc2VydCBjb21iaW5lcyB0aGUgZGFya25lc3Mgb2YgY2hvY29sYXRlIHdpdGggdGhlIHNwYXJrbGUgb2YgcmFzcGJlcnJ5IGFuZCBzdWdhciBzdGFycy4NCg0KIyMjIEluZ3JlZGllbnRzDQoNCiMjIyMgRm9yIHRoZSBDaG9jb2xhdGUgTW91c3NlOg0KLSAyMDBnIGhpZ2gtcXVhbGl0eSBkYXJrIGNob2NvbGF0ZSAoNzAlIGNvY29hKQ0KLSAzIGxhcmdlIGVnZ3MsIHNlcGFyYXRlZA0KLSA1MGcgY2FzdGVyIHN1Z2FyDQotIDEgdHNwIHZhbmlsbGEgZXh0cmFjdA0KLSAzMDBtbCBoZWF2eSBjcmVhbQ0KDQojIyMjIEZvciB0aGUgRnJlZXplLURyaWVkIFJhc3BiZXJyeSBDb3VsaXM6DQotIDE1MGcgZnJlZXplLWRyaWVkIHJhc3BiZXJyaWVzDQotIDIgdGJzcCBjYXN0ZXIgc3VnYXINCi0gMSB0YnNwIGZyZXNoIGxlbW9uIGp1aWNlDQotIDEwMG1sIHdhdGVyDQoNCiMjIyMgRm9yIHRoZSBTdXBlcm5vdmEgU3VnYXI6DQotIDEwMGcgZ3JhbnVsYXRlZCBzdWdhcg0KLSAyIHRic3AgZWRpYmxlIHNwYXJrbGVzIChnb2xkKQ0KLSAxIHBpbmNoIG9mIGVkaWJsZSBnbGl0dGVyDQoNCiMjIyBJbnN0cnVjdGlvbnMNCg0KIyMjIyBDaG9jb2xhdGUgTW91c3NlDQoxLiAqKk1lbHQgdGhlIENob2NvbGF0ZToqKg0KICAgLSBCcmVhayBjaG9jb2xhdGUgaW50byBzbWFsbCBwaWVjZXMgYW5kIG1lbHQgaW4gYSBoZWF0cHJvb2YgYm93bCBvdmVyIHNpbW1lcmluZyB3YXRlci4NCiAgIC0gU3RpciB1bnRpbCBzbW9vdGgsIHRoZW4gbGV0IGl0IGNvb2wgc2xpZ2h0bHkuDQoNCjIuICoqUHJlcGFyZSB0aGUgRWdnIFlvbGtzOioqDQogICAtIEluIGEgc2VwYXJhdGUgYm93bCwgd2hpc2sgdGhlIGVnZyB5b2xrcyB3aXRoIDI1ZyBvZiBjYXN0ZXIgc3VnYXIgdW50aWwgcGFsZSBhbmQgY3JlYW15Lg0KICAgLSBHcmFkdWFsbHkgbWl4IHRoZSBtZWx0ZWQgY2hvY29sYXRlIGludG8gdGhlIGVnZyB5b2xrcyBhbmQgYWRkIHRoZSB2YW5pbGxhIGV4dHJhY3QuDQoNCjMuICoqV2hpc2sgdGhlIEVnZyBXaGl0ZXM6KioNCiAgIC0gSW4gYSBjbGVhbiBib3dsLCB3aGlzayB0aGUgZWdnIHdoaXRlcyB1bnRpbCBzb2Z0IHBlYWtzIGZvcm0uDQogICAtIFNsb3dseSBhZGQgdGhlIHJlbWFpbmluZyAyNWcgY2FzdGVyIHN1Z2FyIGFuZCBjb250aW51ZSB3aGlza2luZyB1bnRpbCBzdGlmZiBwZWFrcyBmb3JtLg0KDQo0LiAqKk1ha2UgdGhlIFdoaXBwZWQgQ3JlYW06KioNCiAgIC0gSW4gYW5vdGhlciBib3dsLCB3aGlzayB0aGUgaGVhdnkgY3JlYW0gdW50aWwgaXQgcmVhY2hlcyBzb2Z0IHBlYWtzLg0KDQo1LiAqKkNvbWJpbmUgdGhlIE1peHR1cmVzOioqDQogICAtIEZvbGQgdGhlIHdoaXBwZWQgY3JlYW0gaW50byB0aGUgY2hvY29sYXRlIG1peHR1cmUgZ2VudGx5IHRvIGtlZXAgaXQgbGlnaHQuDQogICAtIFRoZW4gZm9sZCB0aGUgd2hpc2tlZCBlZ2cgd2hpdGVzIGludG8gdGhlIGNob2NvbGF0ZSBtaXh0dXJlIHVudGlsIGp1c3QgY29tYmluZWQuDQoNCjYuICoqQ2hpbGw6KioNCiAgIC0gRGl2aWRlIHRoZSBtb3Vzc2UgaW50byBzZXJ2aW5nIGdsYXNzZXMgb3IgYm93bHMsIGNvdmVyLCBhbmQgY2hpbGwgZm9yIGF0IGxlYXN0IDQgaG91cnMuDQoNCiMjIyMgUmFzcGJlcnJ5IENvdWxpcw0KMS4gKipCbGVuZCBJbmdyZWRpZW50czoqKg0KICAgLSBJbiBhIGJsZW5kZXIsIGNvbWJpbmUgZnJlZXplLWRyaWVkIHJhc3BiZXJyaWVzLCBzdWdhciwgbGVtb24ganVpY2UsIGFuZCB3YXRlci4NCiAgIC0gQmxlbmQgdW50aWwgc21vb3RoLg0KDQoyLiAqKlN0cmFpbiB0aGUgTWl4dHVyZToqKg0KICAgLSBQYXNzIHRoZSBtaXh0dXJlIHRocm91Z2ggYSBmaW5lIHNpZXZlIHRvIHJlbW92ZSBzZWVkcy4gU2V0IGFzaWRlLg0KDQojIyMjIFByZXBhcmUgdGhlIFN1cGVybm92YSBTdWdhcg0KMS4gKipDYXJhbWVsaXplIHRoZSBTdWdhcjoqKg0KICAgLSBJbiBhIHNtYWxsIHNhdWNlcGFuLCBoZWF0IGdyYW51bGF0ZWQgc3VnYXIgb3ZlciBtZWRpdW0gaGVhdCB1bnRpbCBpdCBtZWx0cyBhbmQgdHVybnMgZ29sZGVuLg0KICAgLSBSZW1vdmUgZnJvbSBoZWF0IGFuZCBxdWlja2x5IHN0aXIgaW4gZWRpYmxlIHNwYXJrbGVzIGFuZCBnbGl0dGVyLg0KDQoyLiAqKkNvb2wgSXQgRG93bjoqKg0KICAgLSBQb3VyIG9udG8gYSBiYWtpbmcgc2hlZXQgbGluZWQgd2l0aCBwYXJjaG1lbnQgcGFwZXIgdG8gY29vbCBhbmQgaGFyZGVuLg0KICAgLSBPbmNlIGhhcmRlbmVkLCBjcnVzaCBpbnRvIHNtYWxsIHNoYXJkcy4NCg0KIyMjIEFzc2VtYmx5DQoxLiAqKlBvdXIgQ291bGlzOioqDQogICAtIERyaXp6bGUgcmFzcGJlcnJ5IGNvdWxpcyBvdmVyIHRoZSB0b3Agb2YgdGhlIGNoaWxsZWQgbW91c3NlLg0KDQoyLiAqKkFkZCBTdWdhciBTaGFyZHM6KioNCiAgIC0gVG9wIHdpdGggc2hhdHRlcmVkIHN1cGVybm92YSBzdWdhci4NCg0KMy4gKipTZXJ2ZSB3aXRoIEVsZWdhbmNlOioqDQogICAtIEFjY29tcGFueSBlYWNoIHNlcnZpbmcgd2l0aCB0aGUgZGVsaWNhdGVseSBjaGlsbGVkIFNpcml1cyBTdGFyIFN5c3RlbSBJY2UgV2luZSAyOTk0Lg0KDQpFeHBlcmllbmNlIGEgZ2xpc3RlbmluZyBkZXNzZXJ0IHRoYXQgY29tYmluZXMgZGVlcCwgcmljaCBmbGF2b3JzIHdpdGggYSByZWZyZXNoaW5nIHRhbmcsIGNyZWF0aW5nIGEgc3BlY3RhY3VsYXIsIG90aGVyd29ybGRseSBlbmRpbmcgdG8gYW55IG1lYWwu";export{g as default};
